This version of Chrome is no longer supported. Please upgrade to asupported browser. Dismiss
Search



Click here to enable desktop notifications for Gmail.   Learn more  Hide
Gmail
COMPOSE
Labels
Inbox (108)
Starred
Sent Mail
Drafts (2)
More 
Hangouts

 
 
  More 
1 of 205  
 
Print all In new window
Fwd: 
Inbox
x 

ash ketchum <twinspica14@gmail.com>
Attachments11:18 PM (0 minutes ago)

to me 
---------- Forwarded message ----------
From: "ash ketchum" <twinspica14@gmail.com>
Date: Mar 6, 2017 8:35 PM
Subject: Fwd:
To: "max james" <max.james2583@gmail.com>
Cc: 

---------- Forwarded message ----------
From: "ash ketchum" <twinspica14@gmail.com>
Date: Sep 7, 2015 7:18 PM
Subject: 
To: "ash ketchum" <twinspica14@gmail.com>
Cc:
10 Attachments 
 
	
Click here to Reply or Forward
0.59 GB (3%) of 15 GB used
Manage
Terms - Privacy
Last account activity: 0 minutes ago
Details
ash ketchum
Add to circles

Show details


#include <opencv2/opencv.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/imgproc/imgproc.hpp>
#include "stdio.h"
#include "iostream"
using namespace std;
using namespace cv;

 VideoCapture cap(0);
Mat img,frame,img1,img2,img3,img4,img_b;
vector<vector<Point> > contours;
vector<Vec4i> heirarchy;
Rect bounding_rect;
char str[100];
char stt[100];
int levels = 0;
Mat dist_8u;
int i;
Point pt;
int l,m;
Point c;
float r=0;

void on_trackbar(int, void *) {
if(contours.empty()) return;

Mat img_show = img.clone();
vector<double> areas(contours.size());

for(i = 0; i < contours.size(); i++)
        {
            areas[i] = contourArea(Mat(contours[i]));
        }
        //get index of largest contour
        double max;
        Point maxPosition;
        minMaxLoc(Mat(areas),0,&max,0,&maxPosition);
        //draw largest contour.
        drawContours(img_show, contours, maxPosition.y, Scalar(0,0,255),3);

        //draw bounding rectangle around largest contour
        Point center;
        Rect r;
        if (contours.size() >= 1)
        {
            r = boundingRect(contours[maxPosition.y]);
            rectangle(img, r.tl(),r.br(), CV_RGB(255, 0, 0), 3, 8, 0); //draw rectangle
        }
        //get centroid
        center.x = r.x + (r.width/2);
        center.y= r.y + (r.height/2);




// Draw contours of the level indicated by slider
//drawContours(img_show, contours, -1, Scalar(0, 0, 255), 3, 8, heirarchy, levels);
//rectangle(img_show, bounding_rect,  Scalar(0,255,0),1, 8,0);


sprintf(str,"%d detection time",center.x);
sprintf(stt,"%d detection time",center.y);

putText(img_show,str,Point2f(00,100),FONT_HERSHEY_PLAIN, 2,  Scalar(0,0,255,255));
putText(img_show,stt,Point2f(100,200),FONT_HERSHEY_PLAIN, 2,  Scalar(0,0,255,255));


imshow("Contours", img_show);
}

int main() {
while(char(waitKey(1)) != 'q') {
cap >> frame;
img = frame.clone();


cvtColor(img, img_b, CV_RGB2GRAY);

threshold(img_b,img_b, 200,255, CV_THRESH_BINARY);

distanceTransform(img_b,img3,CV_DIST_L2,5);
normalize(img3, img3, 0, 1.,NORM_MINMAX);


threshold(img3, img3, .5, 1., CV_THRESH_BINARY);

img3.convertTo(dist_8u, CV_8U);
// Extract contours and heirarchy
findContours(dist_8u, contours, heirarchy, CV_RETR_TREE, CV_CHAIN_APPROX_NONE);


namedWindow("Contours");
createTrackbar("levels", "Contours", &levels, 15, on_trackbar);

// Initialize by drawing the top level contours (as 'levels' is initialized to 0)
on_trackbar(0, 0);
}


return 0;
}
